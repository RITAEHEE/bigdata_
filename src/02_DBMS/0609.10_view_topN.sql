--[X] VIEW, INLINE VIEW, TOP-N구문
-- 1. VIEW : 가상의 테이블 (1)단순뷰 (2)복합뷰
-- (1) 단순뷰 ; 하나의 테이블로 구성한 뷰
CREATE OR REPLACE VIEW EMPv0
  AS SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP;
SELECT * FROM USER_VIEWS; -- DDL을 수행하면 데이터 딕셔너리가 자동 수정
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (9000,'홍','MANAGER',40); -- VIEW에 추가
SELECT * FROM EMPv0;
SELECT * FROM EMP;
UPDATE EMPv0 SET JOB='ANALYST' WHERE EMPNO=9000; -- VIEW를 수정
SELECT * FROM EMPv0 WHERE EMPNO=9000;
SELECT * FROM EMP WHERE EMPNO=9000;
DELETE FROM EMPv0 WHERE EMPNO=9000; -- VIEW를 삭제
SELECT * FROM EMPv0 WHERE EMPNO=9000;
-- EMPv0이라는 뷰 = EMP테이블이 30번 부서만
CREATE OR REPLACE VIEW EMPv0
  AS SELECT * FROM EMP WHERE DEPTNO=30;
SELECT * FROM EMPv0;
DESC EMPv0;
INSERT INTO EMPv0 VALUES (1111,'홍',NULL, NULL,NULL,NULL,NULL,30);
SELECT * FROM EMPv0 WHERE EMPNO=1111;
SELECT * FROM EMP WHERE EMPNO=1111;
-- EMPv0은 30번부서만 액세스할 수 있는 뷰 - 40번 부서 입력은 가능하나 보이지는 않음
INSERT INTO EMPv0 VALUES (1112, '김',NULL, NULL, NULL, NULL, NULL, 40);
SELECT * FROM EMP WHERE EMPNO<2000;
SELECT * FROM EMPv0;
-- 방금 입력한 1111, 1112 삭제하려 하였으나 30번부서만 삭제. 1112는 삭제 안됨(40번부서)
DELETE FROM EMPv0 WHERE EMPNO<2000; 
SELECT * FROM EMP WHERE EMPNO<2000;
-- VIEW의 제한 조건
-- WITH CHECK OPTION을 설정한 뷰는 뷰의 조건에 해당되는 데이터만 삽입, 수정, 삭제 가능
-- WITH READ ONLY을 설정한 뷰는 읽기 전용 뷰
-- 테이블에 NOT NULL로 만든 컬럼은 포함되어야 함.
CREATE OR REPLACE VIEW EMPv0
  AS SELECT ENAME, JOB FROM EMP; -- 뷰 생성시 NOT NULL필드는 미포함
INSERT INTO EMPv0 VALUES ('홍','MANAGER');
SELECT * FROM EMPv0;
-- WITH CHECK OPTION
CREATE OR REPLACE VIEW EMPv0
  AS SELECT * FROM EMP WHERE DEPTNO=30
  WITH CHECK OPTION; -- 조건에 맞는 경우만 삽입, 삭제, 수정 가능
INSERT INTO EMPv0 VALUES (1111,'홍', NULL, NULL, NULL, NULL, NULL, 30);
SELECT * FROM EMPv0;
SELECT * FROM EMP;
INSERT INTO EMPv0 VALUES (1113, '박',NULL, NULL, NULL, NULL, NULL, 40); -- 에러
DELETE FROM EMPv0 WHERE EMPNO=1111;

-- WITH READ ONLY
CREATE OR REPLACE VIEW EMPv1
  AS SELECT * FROM EMP WHERE DEPTNO=20 WITH READ ONLY; -- 읽기 전용 뷰
SELECT E.*, DNAME FROM EMPv1 E, DEPT D WHERE E.DEPTNO=D.DEPTNO;
INSERT INTO EMPv1 VALUES (11114, '윤', NULL, NULL, NULL, NULL, NULL, 20); -- 에러남
UPDATE EMPv1 SET SAL=9000 WHERE EMPNO=7902;
-- (2) 복합뷰 ; 2개 이상의 테이블로 구성한 뷰. DML문을 제한적으로만 사용
CREATE OR REPLACE VIEW EMPv0
  AS SELECT EMPNO, ENAME, JOB, DNAME FROM DEPT D, EMP E WHERE E.DEPTNO=D.DEPTNO;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES (1200,'홍','MANAGER','RESEARCH');--복합뷰는 갱신 불가
-- 컬럼에 별칭을 이용하여 뷰를 생성(서브쿼리의 필드명에 특수문자가 있는 경우)
CREATE OR REPLACE VIEW EMPv1
  AS SELECT EMPNO, ENAME, SAL*12 YEAR_SAL FROM EMP WHERE DEPTNO=10; -- ⓐ별칭을 필드에
SELECT * FROM EMPv1;
INSERT INTO EMPv1 VALUES (1000,'홍',12000); -- 가상의 필드가 있어서 불가
CREATE OR REPLACE VIEW EMPv1 (EMPNO, ENAME, YEAR_SAL)
  AS SELECT EMPNO, ENAME, SAL*12 FROM EMP WHERE DEPTNO=10; -- ⓑ 별칭만 따로
-- 사번, 이름, 10의자리에서 반올림한 SAL을 뷰생성
CREATE OR REPLACE VIEW EMPv1
  AS SELECT EMPNO, ENAME, ROUND(SAL, -2) "SAL" FROM EMP;
CREATE OR REPLACE VIEW EMPv1 (NO, ENAME, SAL)
  AS SELECT EMPNO, ENAME, ROUND(SAL, -2) FROM EMP;
SELECT * FROM EMPv1;
-- 부서번호, 최소급여, 최대급여, 부서평균급여를 포함한 DEPTv1 뷰를 생성
CREATE OR REPLACE VIEW DEPTv1 (DEPTNO, MINSAL, MAXSAL, AVGSAL)
  AS SELECT DEPTNO, MIN(SAL), MAX(SAL), AVG(SAL) FROM EMP GROUP BY DEPTNO;
SELECT * FROM DEPTv1;
-- 부서번호, 부서명, 최소급여, 최대급여, 평균급여를 포함한 DEPTv2 뷰를 생성
SELECT D.DEPTNO, DNAME, MINSAL, MAXSAL, AVGSAL
  FROM DEPTv1 DV, DEPT D
  WHERE DV.DEPTNO=D.DEPTNO;
CREATE OR REPLACE VIEW DEPTv2
  AS SELECT D.DEPTNO, DNAME, MINSAL, MAXSAL, AVGSAL
  FROM DEPTv1 DV, DEPT D
  WHERE DV.DEPTNO=D.DEPTNO;
SELECT * FROM DEPTv2;
-- DISTINCT 키워드를 이용한 뷰 : 중복이 제거된 JOB, DEPTNO
CREATE OR REPLACE VIEW EMPv0
  AS SELECT DISTINCT JOB, DEPTNO FROM EMP;
SELECT * FROM EMPv0;
INSERT INTO EMPv0 VALUES ('MANAGER',10); -- DISTINCT를 포함한 뷰는 읽기 전용
-- 2. INLINE VIEW ; FROM절 상의 서브쿼리를 INLINE VIEW라 하며, FROM 절에 오는 서브쿼리는 VIEW처럼 작용.
-- 급여가 2000을 초과하는 사원의 평균 급여
SELECT AVG(SAL) FROM EMP WHERE SAL>2000;
SELECT AVG(SAL) FROM (SELECT SAL FROM EMP WHERE SAL>2000);
-- 각 부서에서 부서평균급여보다 높은 사원의 이름, 급여, 부서번호
SELECT ENAME, SAL, DEPTNO
  FROM EMP E
  WHERE SAL > (SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
  -- FROM절에 올 서브쿼리 (부서번호, 평균급여) : 1단계
  SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO;
  -- 이름, 급여, 부서번호, 부서별평균 : 2단계
  SELECT ENAME, SAL, E.DEPTNO, AVGSAL
    FROM EMP E, (SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) S
    WHERE E.DEPTNO=S.DEPTNO;
      -- SELECT 필드1, 필드2,...
      --    FROM 테이블명1, (서브쿼리) 별칭
      --    WHERE 조인조건
  -- 이름, 급여, 부서번호(부서별평균보다 높은 사원만) : 3단계
SELECT ENAME, SAL, E.DEPTNO
  FROM EMP E, (SELECT DEPTNO, AVG(SAL) AVGSAL FROM EMP GROUP BY DEPTNO) S
  WHERE E.DEPTNO=S.DEPTNO AND SAL>AVGSAL;

-- 3. TOP-N구문 (TOP 1~10등, TOP 11~20등, TOP 6~10등)
-- ★ ROWNUM : 테이블로부터 가져온 순서
SELECT ROWNUM, ENAME FROM EMP WHERE DEPTNO=20;
SELECT ROWNUM, ENAME, SAL FROM EMP;
SELECT ROWNUM, ENAME, SAL FROM EMP ORDER BY SAL;
SELECT ROWNUM, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL);
-- SAL 기준으로 1~5등
SELECT ROWNUM, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL)
  WHERE ROWNUM<6;
-- 함수를 이용한 RANK 출력
SELECT RANK() OVER(ORDER BY SAL) RANK,
      DENSE_RANK() OVER(ORDER BY SAL) D_RANK,
      ROW_NUMBER() OVER(ORDER BY SAL) N_RANK,
      ENAME, SAL FROM EMP;
-- SAL 기준으로 6~10등
SELECT ROWNUM, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL)
  WHERE ROWNUM BETWEEN 6 AND 10;
-- TOP-N
SELECT ENAME, SAL FROM EMP ORDER BY SAL ; -- 1단계
SELECT ROWNUM RN, ENAME, SAL FROM (SELECT ENAME, SAL FROM EMP ORDER BY SAL); -- 2단계
SELECT ROWNUM, RN, ENAME, SAL 
  FROM (SELECT ROWNUM RN, ENAME, SAL FROM 
        (SELECT ENAME, SAL FROM EMP ORDER BY SAL)); -- 3단계(TOP-N)
SELECT ROWNUM, RN, ENAME, SAL
  FROM (SELECT ROWNUM RN, ENAME, SAL FROM (SELECT * FROM EMP ORDER BY SAL))
  WHERE RN BETWEEN 6 AND 10;
-- 이름을 알파벳 순서대로 정렬해서 6~10등까지 출력(등수, 이름, 사번, JOB, MGR, HIREDATE)
SELECT RN, ENAME, EMPNO, JOB, MGR, HIREDATE
  FROM (SELECT ROWNUM RN, ENAME, EMPNO, JOB, MGR, HIREDATE FROM 
          (SELECT ENAME, EMPNO, JOB, MGR, HIREDATE FROM EMP ORDER BY ENAME))
  WHERE RN BETWEEN 6 AND 10;
SELECT RN, ENAME, EMPNO, JOB, MGR, HIREDATE
  FROM (SELECT ROWNUM RN, A.* FROM 
          (SELECT ENAME, EMPNO, JOB, MGR, HIREDATE FROM EMP ORDER BY ENAME) A)
  WHERE RN BETWEEN 11 AND 15;  
-- <총 연습문제>
-- 1. 부서명과 사원명을 출력하는 용도의 뷰, DNAME_ENAME_VU 를 작성하시오
CREATE OR REPLACE VIEW DNAME_ENAME_VU
  AS SELECT DNAME, ENAME FROM EMP E, DEPT D WHERE E.DEPTNO=D.DEPTNO;
SELECT * FROM DNAME_ENAME_VU;
-- 2. 사원명과 직속상관명을 출력하는 용도의 뷰,  WORKER_MANAGER_VU를 작성하시오
CREATE OR REPLACE VIEW WORKER__MANAGER_VU (worker, manager)
  AS SELECT W.ENAME, M.ENAME FROM EMP W, EMP M WHERE W.MGR=M.EMPNO;
SELECT * FROM WORKER__MANAGER_VU;
-- 3. 부서별 급여합계 등수를 출력하시오(부서번호, 급여합계, 등수). ? 친구출제
SELECT DEPTNO, SUM(SAL) SUM FROM EMP GROUP BY DEPTNO ORDER BY SUM desc; -- 서브쿼리
SELECT DEPTNO, SUM, ROWNUM RANK
  FROM (SELECT DEPTNO, SUM(SAL) SUM FROM EMP GROUP BY DEPTNO ORDER BY SUM desc);
-- 3-1. 부서별 급여합계 등수가 2~3등인 부서번호, 급여합계, 등수를 출력하시오.
SELECT DEPTNO, SUM, RANK
  FROM (SELECT DEPTNO, SUM, ROWNUM RANK
          FROM (SELECT DEPTNO, SUM(SAL) SUM 
                FROM EMP GROUP BY DEPTNO ORDER BY SUM desc))
  WHERE RANK>=2 AND RANK<=3;
-- 4. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 순으로 정렬하시오
SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC;
-- 5. 사원테이블에서 사번, 사원명, 입사일을 입사일이 최신에서 오래된 사원 5명을 출력하시오
SELECT EMPNO, ENAME, HIREDATE
    FROM (SELECT EMPNO, ENAME, HIREDATE FROM EMP 
                                        ORDER BY HIREDATE DESC)
    WHERE ROWNUM<=5;
-- 6. 사원 테이블에서 사번, 사원명, 입사일을 최신부터 오래된 순으로 6번째로 늦은 사원부터 10번째 사원까지 출력
SELECT RN, EMPNO, ENAME, ENAME, HIREDATE
  FROM (SELECT ROWNUM RN, A.*
            FROM (SELECT EMPNO, ENAME, HIREDATE FROM EMP ORDER BY HIREDATE DESC) A)
  WHERE RN>=6 AND RN<=10;
  


